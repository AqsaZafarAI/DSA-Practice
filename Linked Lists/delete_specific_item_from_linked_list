class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

def traverse(head):
    current = head
    while current:
        print(current.data, end=" -> ")
        current = current.next
    print("None")

def delete(head, value):
    # If the list is empty
    if not head:
        return None

    # If the head node contains the value
    if head.data == value:
        return head.next

    # Traverse the list to find the node to delete
    current = head
    while current.next:
        if current.next.data == value:
            current.next = current.next.next  # Skip the node to delete
            return head
        current = current.next

    # Value not found
    return head

# Create linked list
node1 = Node(4)
node2 = Node(7)
node3 = Node(8)
node4 = Node(2)

node1.next = node2
node2.next = node3
node3.next = node4

# Original List
print("Original List:")
traverse(node1)

# Attempt to delete a non-existent value (3)
node1 = delete(node1, 3)
print("List After Attempting to Delete 3 (not in list):")
traverse(node1)

# Delete an existing value (7)
node1 = delete(node1, 7)
print("List After Deleting 7:")
traverse(node1)

# Delete the head node (4)
node1 = delete(node1, 4)
print("List After Deleting 4 (head):")
traverse(node1)
