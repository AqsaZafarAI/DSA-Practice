class SimpleHashMap:
  def __init__(self, size = 100):
    self.size = size
    self.buckets = [[] for _ in range (size)]

  def hash_function(self, key):
  # Sum only the numerical values of the key, ignoring non-numeric characters
    numeric_sum = sum(int(char) for char in key if char.isdigit())
    return numeric_sum % 10  

  def add(self, key, value):
    index = self.hash_function(key)
    bucket = self.buckets[index]

    for i, (k, v) in enumerate(bucket):
      if k == key:
        bucket[i] = (key, value)
        return
    bucket.append((key, value))

  def get(self, key):
    index = self.hash_function(key)
    bucket = self.buckets[index]
    for (k, v) in bucket:
      if k == key:
        return 
    return None

  def remove(self, key):
    index = self.hash_function(key)
    bucket = self.buckets[index]

    for i, (k, v) in enumerate(bucket):
      if k == key:
        del(bucket[i])
        return
      

  def print_map(self):
    for index, bucket in enumerate(self.buckets):
      print(f"bucket {index}: {bucket}")
      


hashmap = SimpleHashMap(size = 10)
hashmap.add("8787868", "Lisa")
hashmap.add("123-4567", "Charlotte")
hashmap.add("123-4568", "Thomas")
hashmap.add("123-4569", "Jens")
hashmap.add("123-4570", "Peter")
hashmap.add("123-4571", "Lisa")
hashmap.add("123-4672", "Adele")
hashmap.add("123-4573", "Michaela")
hashmap.add("123-6574", "Bob")

hashmap.print_map()

print("\nName associated with '123-4570':", hashmap.get("123-4570"))

print("Updating the name for '123-4570' to 'James'")
hashmap.add("123-4570","James")

# Checking if Peter is still there
print("Name associated with '123-4570':", hashmap.get("123-4570"))